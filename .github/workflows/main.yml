---
name: Testing and publishing

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "*.md"
      - "**/*.md"

env:
  GOLANG_VERSION: "1.20"
  GOLANG_LINT_VERSION: "v1.52.2"

jobs:

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANG_LINT_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          args: "--fix=false"

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Caches
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: |
          go mod download
      - name: Check tidiness
        run: |
          touch .env
          make tidy
          if [[ $(git diff --stat) != '' ]]; then
            git diff
            echo 'run `make tidy` and commit changes'
            exit 1
          fi
      - name: Run unit tests
        run: |
          make test

  build-package:
    name: Build package
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          
      - name: Caches
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Debugging action
      # - name: Set up tmate
      #   uses: mxschmitt/action-tmate@v3
      
      - name: Build Docker images
        run: make job-build-docker-all

      - name: Login to GitHub Container Registry
        if: ${{github.ref == 'refs/heads/main'}}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ARTIFACT_SECRET }}

      - name: Push Docker images
        if: ${{github.ref == 'refs/heads/main'}}
        run: make job-push-docker-all

